AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Stackery Serverless API Example Stack
Resources:
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-Table
    Metadata:
      StackeryName: Posts
  graphApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub
        - ${ResourceName} From Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName}
        - ResourceName: graphql
      AuthenticationType: API_KEY
      LogConfig:
        FieldLogLevel: ERROR
        CloudWatchLogsRoleArn: !GetAtt graphApiLogsRole.Arn
    Metadata:
      StackeryName: graphql
  graphApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt graphApi.ApiId
      DefinitionS3Location: graphApi/schema.graphql
  graphApiTotable880667C1DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: AMAZON_DYNAMODB
      ServiceRoleArn: !GetAtt graphApiTotable880667C1AccessRole.Arn
      ApiId: !GetAtt graphApi.ApiId
      Name: Table
      DynamoDBConfig:
        TableName: !Ref Table
        AwsRegion: !Ref AWS::Region
  graphApiTotable880667C1AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-graphApi-to-Tabl
      Policies:
        - PolicyName: Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !GetAtt Table.Arn
                  - !Sub ${Table.Arn}/index/*
  graphApiLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-graphApi-logging
      Policies:
        - PolicyName: Log
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/appsync/apis/*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/appsync/apis/*:log-stream:*
  graphApiQuerygetPostResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Query
      DataSourceName: !GetAtt graphApiTotable880667C1DataSource.Name
      RequestMappingTemplateS3Location: graphql31F74AEE/Query-getPost-request.vm
      ResponseMappingTemplateS3Location: graphql31F74AEE/Query-getPost-response.vm
      ApiId: !GetAtt graphApi.ApiId
      FieldName: getPost
    DependsOn: graphApiSchema
  graphApiMutationaddPostResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Mutation
      DataSourceName: !GetAtt graphApiTotable880667C1DataSource.Name
      RequestMappingTemplateS3Location: graphql31F74AEE/Mutation-addPost-request.vm
      ResponseMappingTemplateS3Location: graphql31F74AEE/Mutation-addPost-response.vm
      ApiId: !GetAtt graphApi.ApiId
      FieldName: addPost
    DependsOn: graphApiSchema
  graphApiPostidResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Post
      DataSourceName: !GetAtt graphApiTotable880667C1DataSource.Name
      RequestMappingTemplateS3Location: graphql31F74AEE/Post-id-request.vm
      ResponseMappingTemplateS3Location: graphql31F74AEE/Post-id-response.vm
      ApiId: !GetAtt graphApi.ApiId
      FieldName: id
    DependsOn: graphApiSchema
  graphApiPostauthorResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Post
      DataSourceName: !GetAtt graphApiTohttpProxyE4775177DataSource.Name
      RequestMappingTemplateS3Location: graphql31F74AEE/Post-author-request.vm
      ResponseMappingTemplateS3Location: graphql31F74AEE/Post-author-response.vm
      ApiId: !GetAtt graphApi.ApiId
      FieldName: author
    DependsOn: graphApiSchema
  graphApiTohttpProxyE4775177DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: HTTP
      ApiId: !GetAtt graphApi.ApiId
      Name: https___stackery_io
      HttpConfig:
        Endpoint: https://stackery.io
  FrontEnd:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-frontend-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
  PopulateFrontEnd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-PopulateFrontEnd
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: PopulateFrontEnd
      CodeUri: src/PopulateFrontEnd
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref FrontEnd
      Environment:
        Variables:
          BUCKET_NAME: !Ref FrontEnd
          BUCKET_ARN: !GetAtt FrontEnd.Arn
  PopulateFrontEndDeployTrigger:
    Type: Custom::FunctionDeployTrigger
    Properties:
      ServiceToken: !GetAtt PopulateFrontEnd.Arn
      DeploymentTimestamp: !Ref DeploymentTimestamp
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  DeploymentTimestamp:
    Type: Number
    Description: Deployment preparation timestamp in milliseconds Since Epoch (injected by Stackery at deployment time)
Conditions:
  TableCreateNewResource: false